{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Aditya/Desktop/ASL/RealTimeSignLanguageDetectionwithTFJS/ReactComputerVisionTemplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/Aditya/Desktop/ASL/RealTimeSignLanguageDetectionwithTFJS/ReactComputerVisionTemplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// Import dependencies\nimport React,{useRef,useEffect,useCallback}from\"react\";import*as tf from\"@tensorflow/tfjs\";import Webcam from\"react-webcam\";import\"./App.css\";//import { nextFrame } from \"@tensorflow/tfjs\";\n// 2. TODO - Import drawing utility here\n// e.g. import { drawRect } from \"./utilities\";\nimport{drawRect}from\"./utilities\";function App(){var webcamRef=useRef(null);var canvasRef=useRef(null);// Main function\nvar runCoco=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var net;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// 3. TODO - Load network \n// e.g. const net = await cocossd.load();\n// https://cloud-object-storage-cos-standard-vnm.s3.us-east.cloud-object-storage.appdomain.cloud/model.json\nconsole.log(\"runCoco is called\");_context.prev=1;// Load model\nconsole.log(\"Model URL:\",process.env.REACT_APP_MODEL_URL);_context.next=5;return tf.loadGraphModel(process.env.REACT_APP_MODEL_URL);case 5:net=_context.sent;console.log(\"Model loaded\");// Loop and detect hands\nsetInterval(function(){detect(net);},16.7);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);console.error(\"Error loading model: \",_context.t0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);})),[]);var detect=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(net){var video,videoWidth,videoHeight,img,resized,casted,expanded,obj,boxes,classes,scores,ctx;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(\"detect is called\");// Check data is available\nif(!(typeof webcamRef.current!==\"undefined\"&&webcamRef.current!==null&&webcamRef.current.video.readyState===4)){_context2.next=33;break;}// Get Video Properties\nvideo=webcamRef.current.video;videoWidth=webcamRef.current.video.videoWidth;videoHeight=webcamRef.current.video.videoHeight;// Set video width\nwebcamRef.current.video.width=videoWidth;webcamRef.current.video.height=videoHeight;// Set canvas height and width\ncanvasRef.current.width=videoWidth;canvasRef.current.height=videoHeight;// 4. TODO - Make Detections\nimg=tf.browser.fromPixels(video);resized=tf.image.resizeBilinear(img,[640,480]);casted=resized.cast('int32');expanded=casted.expandDims(0);_context2.next=15;return net.executeAsync(expanded);case 15:obj=_context2.sent;console.log(obj);_context2.next=19;return obj[1].array();case 19:boxes=_context2.sent;_context2.next=22;return obj[2].array();case 22:classes=_context2.sent;_context2.next=25;return obj[4].array();case 25:scores=_context2.sent;// Draw mesh\nctx=canvasRef.current.getContext(\"2d\");// 5. TODO - Update drawing utility\n// drawSomething(obj, ctx)  \nrequestAnimationFrame(function(){drawRect(boxes[0],classes[0],scores[0],0.8,videoWidth,videoHeight,ctx);});tf.dispose(img);tf.dispose(resized);tf.dispose(casted);tf.dispose(expanded);tf.dispose(obj);case 33:case\"end\":return _context2.stop();}}},_callee2);}));return function detect(_x){return _ref2.apply(this,arguments);};}();useEffect(function(){runCoco();},[runCoco]);return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"header\",{className:\"App-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"title\"},\"Real Time Sign Lanuage Detection\")),/*#__PURE__*/React.createElement(\"div\",{className:\"instructBox\"},/*#__PURE__*/React.createElement(\"p\",{className:\"instruct\"},\"For best results, use a very well lit room with a blank background\"),/*#__PURE__*/React.createElement(\"p\",{className:\"instruct\"},\"Position only your hand in the frame, 1-2 feet from the camera\"),/*#__PURE__*/React.createElement(\"p\",{className:\"instruct\"},\"Allow browser camera permissions, test model with:\"),/*#__PURE__*/React.createElement(\"div\",{className:\"imgs\"},/*#__PURE__*/React.createElement(\"div\",{className:\"hands\"},/*#__PURE__*/React.createElement(\"p\",{className:\"gests\"},\"Hello\"),/*#__PURE__*/React.createElement(\"img\",{className:\"img\",src:\"/images/hello.png\",alt:\"Hello in ASL\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"hands\"},/*#__PURE__*/React.createElement(\"p\",{className:\"gests\"},\"Yes\"),/*#__PURE__*/React.createElement(\"img\",{className:\"img\",src:\"/images/yes.png\",alt:\"Hello in ASL\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"hands\"},/*#__PURE__*/React.createElement(\"p\",{className:\"gests\"},\"No\"),/*#__PURE__*/React.createElement(\"img\",{className:\"img\",src:\"/images/no.png\",alt:\"Hello in ASL\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"hands\"},/*#__PURE__*/React.createElement(\"p\",{className:\"gests\"},\"I Love You\"),/*#__PURE__*/React.createElement(\"img\",{className:\"img\",src:\"/images/ily.png\",alt:\"Hello in ASL\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"hands\"},/*#__PURE__*/React.createElement(\"p\",{className:\"gests\"},\"Thank You\"),/*#__PURE__*/React.createElement(\"img\",{className:\"img\",src:\"/images/ty.png\",alt:\"Hello in ASL\"}))),/*#__PURE__*/React.createElement(\"p\",{className:\" footer \"},\"*Model is in initial training stage. Currently is only trained on the given five poses, working on expanding training to improve accuracy.\")),/*#__PURE__*/React.createElement(Webcam,{className:\"frame\",ref:webcamRef,muted:true}),/*#__PURE__*/React.createElement(\"canvas\",{ref:canvasRef,className:\"frame\"})));}export default App;","map":{"version":3,"sources":["/Users/Aditya/Desktop/ASL/RealTimeSignLanguageDetectionwithTFJS/ReactComputerVisionTemplate/src/App.js"],"names":["React","useRef","useEffect","useCallback","tf","Webcam","drawRect","App","webcamRef","canvasRef","runCoco","console","log","process","env","REACT_APP_MODEL_URL","loadGraphModel","net","setInterval","detect","error","current","video","readyState","videoWidth","videoHeight","width","height","img","browser","fromPixels","resized","image","resizeBilinear","casted","cast","expanded","expandDims","executeAsync","obj","array","boxes","classes","scores","ctx","getContext","requestAnimationFrame","dispose"],"mappings":"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","sourcesContent":["// Import dependencies\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\n//import { nextFrame } from \"@tensorflow/tfjs\";\n// 2. TODO - Import drawing utility here\n// e.g. import { drawRect } from \"./utilities\";\nimport {drawRect} from \"./utilities\"; \n\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Main function\n  const runCoco = useCallback(async () => {\n    // 3. TODO - Load network \n    // e.g. const net = await cocossd.load();\n    // https://cloud-object-storage-cos-standard-vnm.s3.us-east.cloud-object-storage.appdomain.cloud/model.json\n\n    console.log(\"runCoco is called\");\n\n    try {\n      // Load model\n      console.log(\"Model URL:\", process.env.REACT_APP_MODEL_URL);\n      const net = await tf.loadGraphModel(process.env.REACT_APP_MODEL_URL);\n      console.log(\"Model loaded\");\n\n      // Loop and detect hands\n      setInterval(() => {\n        detect(net);\n      }, 16.7);\n    } catch (error) {\n      console.error(\"Error loading model: \", error);\n    }\n  }, []);\n\n\n\n  const detect = async (net) => {\n    console.log(\"detect is called\");  \n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // 4. TODO - Make Detections\n      const img = tf.browser.fromPixels(video)\n      const resized = tf.image.resizeBilinear(img, [640,480])\n      const casted = resized.cast('int32')\n      const expanded = casted.expandDims(0)\n      const obj = await net.executeAsync(expanded)\n      console.log(obj)\n\n      const boxes = await obj[1].array()\n      const classes = await obj[2].array()\n      const scores = await obj[4].array()\n      \n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n\n      // 5. TODO - Update drawing utility\n      // drawSomething(obj, ctx)  \n      requestAnimationFrame(()=>{drawRect(boxes[0], classes[0], scores[0], 0.8, videoWidth, videoHeight, ctx)}); \n      tf.dispose(img)\n      tf.dispose(resized)\n      tf.dispose(casted)\n      tf.dispose(expanded)\n      tf.dispose(obj)\n\n    }\n  };\n\n  useEffect(()=>{runCoco()},[runCoco]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <div className=\"header\">\n        <h1 className=\"title\">Real Time Sign Lanuage Detection</h1>\n      </div>\n      <div className=\"instructBox\">\n        <p className=\"instruct\">For best results, use a very well lit room with a blank background</p>\n        <p className=\"instruct\">Position only your hand in the frame, 1-2 feet from the camera</p>\n        <p className=\"instruct\">Allow browser camera permissions, test model with:</p>\n        \n        <div className=\"imgs\">\n        <div className=\"hands\">\n          <p className=\"gests\">Hello</p>\n          <img className=\"img\" src=\"/images/hello.png\" alt=\"Hello in ASL\" />\n        </div>\n        <div className=\"hands\">\n        <p className=\"gests\">Yes</p>\n        <img className=\"img\" src=\"/images/yes.png\" alt=\"Hello in ASL\" />\n        </div>\n        <div className=\"hands\">\n        <p className=\"gests\">No</p>\n        <img className=\"img\" src=\"/images/no.png\" alt=\"Hello in ASL\" />\n        </div>\n        <div className=\"hands\">\n        <p className=\"gests\">I Love You</p>\n        <img className=\"img\" src=\"/images/ily.png\" alt=\"Hello in ASL\" />\n        </div>\n        <div className=\"hands\">\n        <p className=\"gests\">Thank You</p>\n        <img className=\"img\" src=\"/images/ty.png\" alt=\"Hello in ASL\" />\n        </div>\n        </div>\n        <p className=\" footer \">*Model is in initial training stage. Currently is only trained on the given five poses, working on expanding training to improve accuracy.</p>\n        </div>\n        <Webcam\n        className= \"frame\"\n          ref={webcamRef}\n          muted={true} \n        />\n\n        <canvas\n          ref={canvasRef}\n          className= \"frame\"\n      \n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}